{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","params","match","useRouteMatch","getSingleQuote","loadedquote","exact","path","to","url"],"mappings":"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","file":"static/js/3.166bfe05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__38O0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1-BFs\",\"loading\":\"NewCommentForm_loading__1TvY7\",\"control\":\"NewCommentForm_control__2rQFr\",\"actions\":\"NewCommentForm_actions__2RBgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3hNQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__21WVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3rjJS\"};","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n\tconst commentTextRef = useRef();\n\n\tconst { sendRequest, status, error } = useHttp(addComment);\n\n\tconst { onAddedComment } = props;\n\n\tuseEffect(() => {\n\t\tif (status === 'completed' && !error) {\n\t\t\tonAddedComment();\n\t\t}\n\t}, [status, error, onAddedComment]);\n\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\t\t// optional: Could validate here\n\t\tconst enteredText = commentTextRef.current.value;\n\t\tsendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\t};\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t{status === 'pending' && (\n\t\t\t\t<div className='centered'>\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\n\t\t\t\t<label htmlFor='comment'>Your Comment</label>\n\t\t\t\t<textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className='btn'>Add Comment</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n\tconst [isAddingComment, setIsAddingComment] = useState(false);\n\tconst params = useParams();\n\tconst { quoteId } = params;\n\n\tconst { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n\tuseEffect(() => {\n\t\tsendRequest(quoteId);\n\t}, [quoteId, sendRequest]);\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true);\n\t};\n\n\tconst addedCommentHandler = useCallback(() => {\n\t\tsendRequest(quoteId);\n\t}, [sendRequest, quoteId]);\n\n\tlet comments;\n\tif (status === 'pending') {\n\t\tcomments = (\n\t\t\t<div className='centered'>\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (status === 'completed' && loadedComments && loadedComments.length > 0) {\n\t\tcomments = <CommentsList comments={loadedComments} />;\n\t}\n\n\tif (\n\t\tstatus === 'completed' &&\n\t\t(!loadedComments || loadedComments.length === 0)\n\t) {\n\t\tcomments = <p className='centered'>No comments were added yet!</p>;\n\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className='btn' onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && (\n\t\t\t\t<NewCommentForm\n\t\t\t\t\tquoteId={quoteId}\n\t\t\t\t\tonAddedComment={addedCommentHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{comments}\n\t\t</section>\n\t);\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\n// const DUMMY_DATA = [\r\n// \t{ id: 'q1', author: 'Anna', text: 'All is well!' },\r\n// \t{ id: 'q2', author: 'Janis', text: 'Not all those who wander are lost' },\r\n// \t{ id: 'q3', author: 'Marta', text: 'Always' },\r\n// ];\r\n\r\nconst QuoteDetail = () => {\r\n\tconst params = useParams();\r\n\tconst match = useRouteMatch();\r\n\r\n\tconst { quoteId } = params;\r\n\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tstatus,\r\n\t\tdata: loadedquote,\r\n\t\terror,\r\n\t} = useHttp(getSingleQuote, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(quoteId);\r\n\t}, [sendRequest, quoteId]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <p className='centered'>{error}</p>;\r\n\t}\r\n\r\n\t// const quote = loadedquote.find((quote) => quote.id === params.quoteId);\r\n\r\n\tif (!loadedquote.text) {\r\n\t\treturn <div>No quote found!</div>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<HighlightedQuote text={loadedquote.text} author={loadedquote.author} />\r\n\t\t\t<Route exact path={match.path}>\r\n\t\t\t\t<div className='centered'>\r\n\t\t\t\t\t<Link className='btn--flat' to={`${match.url}/comments`}>\r\n\t\t\t\t\t\tLoad comments\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t<Comments />\r\n\t\t\t</Route>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}